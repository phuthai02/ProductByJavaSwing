/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import DAO.BanChoDAO;
import DAO.BanDAO;
import DAO.BanDatDAO;
import DAO.HoaDonChiTietDAO;
import DAO.HoaDonDAO;
import DAO.KhachHangDao;
import DAO.LoaiSanPhamDAO;
import DAO.NhanVienDAO;
import DAO.SKKMDAO;
import DAO.SanPhamDAO;
import Entity.Ban;
import Entity.BanCho;
import Entity.BanDat;
import Entity.HoaDon;
import Entity.HoaDonChiTiet;
import Entity.KhachHang;
import Entity.LoaiSp;
import Entity.SanPham;
import Entity.SuKienKhuyenMai;
import Untils.Auth;
import Untils.MsgBox;
import Untils.XBill;
import Untils.Xcurrency;
import Untils.Xdate;
import com.itextpdf.text.BadElementException;
import java.awt.Color;
import java.awt.Component;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author doanp
 */
public class IF_QuanLyBan extends javax.swing.JInternalFrame {

    /**
     * Creates new form IF_QuanLyBan
     */
    DefaultComboBoxModel modelCbo;
    BanDAO daoBan;
    int pageIndexTB;
    List<LoaiSp> lstLSP;
    DefaultTableModel modelSP;
    DefaultTableModel modelDS;
    DefaultTableModel modelDB;
    DefaultTableModel modelQL;
    DefaultTableModel modelLT;
    DefaultTableModel modelCI;
    boolean huyMon;
    boolean checkSave;
    List<Ban> lstALL;
    List<BanDat> lstDB;
    boolean clickdatBan = false;
    List<BanDat> lstCI;
    DefaultTableModel modelSP1;
    List<SuKienKhuyenMai> lstSKKM;
    String maBan;
    int rowQL = -1;

    public IF_QuanLyBan(int indexTab) {
        initComponents();
        init();
        tabs.setSelectedIndex(indexTab);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cboTang = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        rdoALL = new javax.swing.JRadioButton();
        rdoTrong = new javax.swing.JRadioButton();
        rdoCoKhach = new javax.swing.JRadioButton();
        btnPre = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        lbTable = new javax.swing.JLabel();
        btnXacNhan = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        pnlBan = new javax.swing.JPanel();
        btn1 = new javax.swing.JLabel();
        btn2 = new javax.swing.JLabel();
        btn3 = new javax.swing.JLabel();
        btn4 = new javax.swing.JLabel();
        btn5 = new javax.swing.JLabel();
        btn6 = new javax.swing.JLabel();
        btn7 = new javax.swing.JLabel();
        btn8 = new javax.swing.JLabel();
        btn9 = new javax.swing.JLabel();
        btn10 = new javax.swing.JLabel();
        btn11 = new javax.swing.JLabel();
        btn12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cboLoai = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSP = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTimKiemTT = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDS = new javax.swing.JTable();
        lblMaBan = new javax.swing.JLabel();
        btnThemVao = new javax.swing.JButton();
        btnLuuLai = new javax.swing.JButton();
        btnHuyMon = new javax.swing.JButton();
        btnSoLuong = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        btnHoanThanh = new javax.swing.JButton();
        btnChuyenBan = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDB = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTimBanDat = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cboBan = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        txtNgaySinh = new com.toedter.calendar.JDateChooser();
        txtEmail = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtTen = new javax.swing.JTextField();
        btnThemMoi = new javax.swing.JButton();
        btnKT = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        txtNgaydat = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        cboGio = new javax.swing.JComboBox<>();
        cboPhut = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btnHuyChon = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        cboTangDB = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        btnDatLich = new javax.swing.JButton();
        btnHuyLich = new javax.swing.JButton();
        btnThayDoiLich = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        cboTangQL = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblQL = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtMaBan = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtTenBan = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtTang = new javax.swing.JSpinner();
        jSeparator3 = new javax.swing.JSeparator();
        btnThemBan = new javax.swing.JButton();
        btnSuaBan = new javax.swing.JButton();
        btnXoaBan = new javax.swing.JButton();
        lblB = new javax.swing.JLabel();
        btnMoi = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        rdoNam1 = new javax.swing.JRadioButton();
        rdoNu1 = new javax.swing.JRadioButton();
        txtNgaySinh1 = new com.toedter.calendar.JDateChooser();
        txtEmail1 = new javax.swing.JTextField();
        txtSDT1 = new javax.swing.JTextField();
        txtTen1 = new javax.swing.JTextField();
        btnKT1 = new javax.swing.JButton();
        btnHuyChon1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCI = new javax.swing.JTable();
        jSeparator4 = new javax.swing.JSeparator();
        btnCheckIn = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        rdoNuTT = new javax.swing.JRadioButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblSP1 = new javax.swing.JTable();
        jSeparator5 = new javax.swing.JSeparator();
        btnThemMoiTT = new javax.swing.JButton();
        btnKTTT = new javax.swing.JButton();
        txtNgaySinhTT = new com.toedter.calendar.JDateChooser();
        jLabel33 = new javax.swing.JLabel();
        btnHuyChonTT = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        lblCongtien = new javax.swing.JLabel();
        lblGiam = new javax.swing.JLabel();
        lblGioVao = new javax.swing.JLabel();
        lblTongcong = new javax.swing.JLabel();
        lblBan = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        lblOrder = new javax.swing.JLabel();
        cboSK = new javax.swing.JComboBox<>();
        jLabel37 = new javax.swing.JLabel();
        txtTenTT = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtSDTTT = new javax.swing.JTextField();
        txtKhachDua = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        lblTraLai = new javax.swing.JLabel();
        txtEmailTT = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        lblThanhToan = new javax.swing.JLabel();
        lblGioRa = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        lblThanhChu = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        rdoNamTT = new javax.swing.JRadioButton();
        btnHoanThanhTT = new javax.swing.JButton();
        btnHuyTT = new javax.swing.JButton();
        btnInHoaDonTT = new javax.swing.JButton();

        setClosable(true);

        jPanel4.setBackground(new java.awt.Color(255, 217, 102));

        jLabel1.setText("Tìm kiếm:");

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel2.setText("Tầng");

        cboTang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTangItemStateChanged(evt);
            }
        });

        jLabel3.setText("Trạng thái:");

        buttonGroup2.add(rdoALL);
        rdoALL.setSelected(true);
        rdoALL.setText("Tất cả");
        rdoALL.setOpaque(false);
        rdoALL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdoALLMouseClicked(evt);
            }
        });

        buttonGroup2.add(rdoTrong);
        rdoTrong.setText("Còn trống");
        rdoTrong.setOpaque(false);
        rdoTrong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdoTrongMouseClicked(evt);
            }
        });

        buttonGroup2.add(rdoCoKhach);
        rdoCoKhach.setText("Có khách");
        rdoCoKhach.setOpaque(false);
        rdoCoKhach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdoCoKhachMouseClicked(evt);
            }
        });

        btnPre.setText("<<");
        btnPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreActionPerformed(evt);
            }
        });

        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        lbTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbTable.setText("1");

        btnXacNhan.setText("Chuyển bàn");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        btnHuy.setText("Hủy chuyển");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTimKiem)
                            .addComponent(cboTang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnPre)
                                .addGap(33, 33, 33)
                                .addComponent(lbTable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addComponent(btnNext))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(rdoCoKhach)
                                    .addComponent(rdoTrong)
                                    .addComponent(rdoALL)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(btnXacNhan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboTang, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdoALL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdoTrong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdoCoKhach)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPre)
                    .addComponent(lbTable)
                    .addComponent(btnNext))
                .addGap(18, 18, 18)
                .addComponent(btnXacNhan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnHuy)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlBan.setLayout(new java.awt.GridLayout(3, 4, 10, 10));

        btn1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/ship.png"))); // NOI18N
        btn1.setText("Mang về");
        btn1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn1.setOpaque(true);
        btn1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn1MouseClicked(evt);
            }
        });
        pnlBan.add(btn1);

        btn2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table.png"))); // NOI18N
        btn2.setText("Bàn X");
        btn2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn2.setOpaque(true);
        btn2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn2MouseClicked(evt);
            }
        });
        pnlBan.add(btn2);

        btn3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table.png"))); // NOI18N
        btn3.setText("Bàn X");
        btn3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn3.setOpaque(true);
        btn3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn3MouseClicked(evt);
            }
        });
        pnlBan.add(btn3);

        btn4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table.png"))); // NOI18N
        btn4.setText("Bàn X");
        btn4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn4.setOpaque(true);
        btn4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn4MouseClicked(evt);
            }
        });
        pnlBan.add(btn4);

        btn5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table.png"))); // NOI18N
        btn5.setText("Bàn X");
        btn5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn5.setOpaque(true);
        btn5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn5MouseClicked(evt);
            }
        });
        pnlBan.add(btn5);

        btn6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table.png"))); // NOI18N
        btn6.setText("Bàn X");
        btn6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn6.setOpaque(true);
        btn6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn6MouseClicked(evt);
            }
        });
        pnlBan.add(btn6);

        btn7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table.png"))); // NOI18N
        btn7.setText("Bàn X");
        btn7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn7.setOpaque(true);
        btn7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn7MouseClicked(evt);
            }
        });
        pnlBan.add(btn7);

        btn8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table.png"))); // NOI18N
        btn8.setText("Bàn X");
        btn8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn8.setOpaque(true);
        btn8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn8MouseClicked(evt);
            }
        });
        pnlBan.add(btn8);

        btn9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table.png"))); // NOI18N
        btn9.setText("Bàn X");
        btn9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn9.setOpaque(true);
        btn9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn9MouseClicked(evt);
            }
        });
        pnlBan.add(btn9);

        btn10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table.png"))); // NOI18N
        btn10.setText("Bàn X");
        btn10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn10.setOpaque(true);
        btn10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn10MouseClicked(evt);
            }
        });
        pnlBan.add(btn10);

        btn11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table.png"))); // NOI18N
        btn11.setText("Bàn X");
        btn11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn11.setOpaque(true);
        btn11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn11MouseClicked(evt);
            }
        });
        pnlBan.add(btn11);

        btn12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table.png"))); // NOI18N
        btn12.setText("Bàn X");
        btn12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn12.setOpaque(true);
        btn12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn12MouseClicked(evt);
            }
        });
        pnlBan.add(btn12);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBan, javax.swing.GroupLayout.DEFAULT_SIZE, 882, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(pnlBan, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("Danh sách bàn", jPanel1);

        jLabel4.setText("Loại sản phẩm:");

        cboLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLoai.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLoaiItemStateChanged(evt);
            }
        });

        tblSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblSP);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 153));
        jLabel5.setText("DANH SÁCH SẢN PHẨM MÃ BÀN:");

        jLabel6.setText("Tìm kiếm");

        txtTimKiemTT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemTTKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTimKiemTTKeyTyped(evt);
            }
        });

        tblDS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblDS);

        lblMaBan.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblMaBan.setForeground(new java.awt.Color(255, 0, 51));
        lblMaBan.setText("CHƯA CHỌN BÀN");

        btnThemVao.setText("Thêm vào");
        btnThemVao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemVaoActionPerformed(evt);
            }
        });

        btnLuuLai.setText("Lưu lại");
        btnLuuLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuLaiActionPerformed(evt);
            }
        });

        btnHuyMon.setText("Hủy món");
        btnHuyMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyMonActionPerformed(evt);
            }
        });

        btnSoLuong.setText("Chỉnh sửa");
        btnSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSoLuongActionPerformed(evt);
            }
        });

        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnHoanThanh.setText("Hoàn thành");
        btnHoanThanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHoanThanhActionPerformed(evt);
            }
        });

        btnChuyenBan.setText("Chuyển bàn");
        btnChuyenBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChuyenBanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(cboLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtTimKiemTT)))
                    .addComponent(btnThemVao)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMaBan)
                        .addGap(0, 197, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnHuyMon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHoanThanh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnChuyenBan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLuuLai)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnThanhToan))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboLoai, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(txtTimKiemTT)
                    .addComponent(jLabel5)
                    .addComponent(lblMaBan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemVao)
                    .addComponent(btnHuyMon)
                    .addComponent(btnSoLuong)
                    .addComponent(btnThanhToan)
                    .addComponent(btnLuuLai)
                    .addComponent(btnHoanThanh)
                    .addComponent(btnChuyenBan))
                .addGap(14, 14, 14))
        );

        tabs.addTab("Thông tin bàn", jPanel2);

        tblDB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDBMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDB);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 153));
        jLabel7.setText("ĐẶT BÀN");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Tìm kiếm lịch đặt:");

        txtTimBanDat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimBanDatKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 153));
        jLabel9.setText("Lịch đặt bàn:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Bàn muốn đặt:");
        jLabel10.setToolTipText("");

        cboBan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Tên khách hàng:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Số điện thoại:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Email:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Ngày sinh:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Giới tính:");

        buttonGroup1.add(rdoNam);
        rdoNam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNu.setText("Nữ");

        txtNgaySinh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtSDT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtTen.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btnThemMoi.setText("Thêm mới");
        btnThemMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemMoiActionPerformed(evt);
            }
        });

        btnKT.setText("Kiểm tra");
        btnKT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKTActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Ngày đặt:");

        txtNgaydat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Giờ đặt:");

        cboGio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboPhut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText(":");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("phút");

        btnHuyChon.setText("Hủy chọn");
        btnHuyChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyChonActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Tầng:");
        jLabel20.setToolTipText("");

        cboTangDB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTangDB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTangDBItemStateChanged(evt);
            }
        });

        btnDatLich.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDatLich.setText("Đặt lịch");
        btnDatLich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatLichActionPerformed(evt);
            }
        });

        btnHuyLich.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnHuyLich.setText("Hủy lịch đặt");
        btnHuyLich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyLichActionPerformed(evt);
            }
        });

        btnThayDoiLich.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThayDoiLich.setText("Thay đổi lịch");
        btnThayDoiLich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThayDoiLichActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimBanDat, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel15))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(rdoNam)
                                                .addGap(18, 18, 18)
                                                .addComponent(rdoNu))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                                                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtTen, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtSDT, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addGap(20, 20, 20)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(btnThemMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnHuyChon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnKT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(10, 10, 10))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel20))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cboTangDB, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cboBan, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(cboGio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel18)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cboPhut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel19))
                                            .addComponent(txtNgaydat, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE))
                                .addContainerGap())
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnDatLich)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnThayDoiLich)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHuyLich)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(217, 217, 217))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtTimBanDat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9))
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThemMoi))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKT))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHuyChon))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(rdoNam)
                            .addComponent(rdoNu))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(cboTangDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(cboBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(txtNgaydat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(cboPhut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cboGio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel18)
                                .addComponent(jLabel19)))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDatLich)
                            .addComponent(btnHuyLich)
                            .addComponent(btnThayDoiLich))))
                .addContainerGap())
        );

        tabs.addTab("Đặt bàn", jPanel3);

        cboTangQL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTangQL.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTangQLItemStateChanged(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Tầng:");
        jLabel21.setToolTipText("");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 51, 153));
        jLabel22.setText("Danh sách bàn:");

        tblQL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblQL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQLMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblQL);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 51, 153));
        jLabel23.setText("THIẾT LẬP BÀN");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Mã bàn:");

        txtMaBan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("Tên bàn:");

        txtTenBan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Tầng:");

        txtTang.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btnThemBan.setText("Thêm bàn");
        btnThemBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemBanActionPerformed(evt);
            }
        });

        btnSuaBan.setText("Sửa bàn");
        btnSuaBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaBanActionPerformed(evt);
            }
        });

        btnXoaBan.setText("Xóa bàn");
        btnXoaBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaBanActionPerformed(evt);
            }
        });

        lblB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/a1.jpg"))); // NOI18N

        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel26))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTenBan)
                                    .addComponent(txtMaBan)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(txtTang, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jSeparator3)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(btnThemBan)
                                .addGap(18, 18, 18)
                                .addComponent(btnSuaBan)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoaBan)
                                .addGap(18, 18, 18)
                                .addComponent(btnMoi)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(lblB, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboTangQL, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addGap(142, 142, 142))))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnMoi, btnSuaBan, btnThemBan, btnXoaBan});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(cboTangQL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22))
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(txtMaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(txtTenBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(txtTang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThemBan)
                            .addComponent(btnSuaBan)
                            .addComponent(btnXoaBan)
                            .addComponent(btnMoi))
                        .addGap(18, 18, 18)
                        .addComponent(lblB, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        tabs.addTab("Thiết lập bàn", jPanel5);

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("Tên khách hàng:");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Số điện thoại:");

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("Email:");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setText("Ngày sinh:");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText("Giới tính:");

        buttonGroup3.add(rdoNam1);
        rdoNam1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNam1.setSelected(true);
        rdoNam1.setText("Nam");

        buttonGroup3.add(rdoNu1);
        rdoNu1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNu1.setText("Nữ");

        txtNgaySinh1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtEmail1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtSDT1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtTen1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btnKT1.setText("Kiểm tra");
        btnKT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKT1ActionPerformed(evt);
            }
        });

        btnHuyChon1.setText("Hủy chọn");
        btnHuyChon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyChon1ActionPerformed(evt);
            }
        });

        tblCI.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tblCI);

        btnCheckIn.setText("Check in");
        btnCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckInActionPerformed(evt);
            }
        });

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/a3.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(btnCheckIn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel31))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtEmail1, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtSDT1, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTen1, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNgaySinh1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnHuyChon1)
                                            .addComponent(btnKT1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(rdoNam1)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoNu1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(txtTen1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(txtSDT1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKT1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(txtEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHuyChon1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(txtNgaySinh1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(rdoNam1)
                            .addComponent(rdoNu1)))
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCheckIn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("Check in", jPanel6);

        buttonGroup4.add(rdoNuTT);
        rdoNuTT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNuTT.setText("Nữ");

        tblSP1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tblSP1);

        btnThemMoiTT.setText("Thêm mới");
        btnThemMoiTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemMoiTTActionPerformed(evt);
            }
        });

        btnKTTT.setText("Kiểm tra");
        btnKTTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKTTTActionPerformed(evt);
            }
        });

        txtNgaySinhTT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setText("Cộng tiền hàng:");

        btnHuyChonTT.setText("Hủy chọn");
        btnHuyChonTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyChonTTActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setText("Giảm:");

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel35.setText("Tổng cộng:");

        lblCongtien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCongtien.setText("1.000.000đ");

        lblGiam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblGiam.setText("1.000.000đ");

        lblGioVao.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblGioVao.setText("Giờ");

        lblTongcong.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTongcong.setText("1.000.000đ");

        lblBan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblBan.setText("Bàn");

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel36.setText("Sự kiện khuyến mãi:");

        lblOrder.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblOrder.setText("Order");

        cboSK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboSK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSK.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSKItemStateChanged(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setText("Bàn:");

        txtTenTT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel38.setText("Khách đưa:");

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel39.setText("Số điện thoại:");

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setText("Trả lại:");

        txtSDTTT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtKhachDua.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtKhachDua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKhachDuaKeyReleased(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setText("Email:");

        lblTraLai.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTraLai.setText("0 đ");

        txtEmailTT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel42.setText("Ngày sinh:");

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel43.setText("Tên khách hàng:");

        jLabel44.setBackground(new java.awt.Color(255, 217, 102));
        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(0, 51, 153));
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("THANH TOÁN");
        jLabel44.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel44.setOpaque(true);

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel45.setText("Nhân viên order:");

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel46.setText("Giờ vào:");

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel47.setText("Giờ ra");

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel48.setText("Nhân viên thanh toán:");

        lblThanhToan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblThanhToan.setText("Thanh toán");

        lblGioRa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblGioRa.setText("Giờ");

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel49.setText("Thành chữ:");

        lblThanhChu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblThanhChu.setText("Một Triệu Đồng");

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel50.setText("Giới tính:");

        buttonGroup4.add(rdoNamTT);
        rdoNamTT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNamTT.setSelected(true);
        rdoNamTT.setText("Nam");

        btnHoanThanhTT.setBackground(new java.awt.Color(102, 255, 102));
        btnHoanThanhTT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/hoanthanh.png"))); // NOI18N
        btnHoanThanhTT.setText("Hoàn thành");
        btnHoanThanhTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHoanThanhTTActionPerformed(evt);
            }
        });

        btnHuyTT.setBackground(new java.awt.Color(102, 255, 255));
        btnHuyTT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/huy.png"))); // NOI18N
        btnHuyTT.setText("Hủy");
        btnHuyTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyTTActionPerformed(evt);
            }
        });

        btnInHoaDonTT.setBackground(new java.awt.Color(240, 112, 211));
        btnInHoaDonTT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/inhoadon.png"))); // NOI18N
        btnInHoaDonTT.setText("In hóa đơn");
        btnInHoaDonTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHoaDonTTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel48)
                                .addGap(18, 18, 18)
                                .addComponent(lblThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel47)
                                    .addComponent(jLabel46)
                                    .addComponent(jLabel45)
                                    .addComponent(jLabel37))
                                .addGap(53, 53, 53)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                        .addComponent(lblGioRa, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(131, 131, 131))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblGioVao, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblBan, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel50)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addComponent(jLabel41)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtEmailTT, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel39)
                                                    .addComponent(jLabel43))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtTenTT)
                                                    .addComponent(txtSDTTT, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                                .addComponent(jLabel42)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                                        .addComponent(rdoNamTT)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(rdoNuTT))
                                                    .addComponent(txtNgaySinhTT, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnKTTT)
                                            .addComponent(btnThemMoiTT)
                                            .addComponent(btnHuyChonTT))))
                                .addGap(85, 85, 85))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel33)
                                            .addComponent(jLabel34)
                                            .addComponent(jLabel35)
                                            .addComponent(jLabel49))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblGiam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblCongtien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblTongcong, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                                            .addComponent(lblThanhChu, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel36)
                                        .addGap(18, 18, 18)
                                        .addComponent(cboSK, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel38)
                                            .addComponent(jLabel40))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTraLai, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(btnHoanThanhTT)
                                        .addGap(38, 38, 38)
                                        .addComponent(btnInHoaDonTT)
                                        .addGap(41, 41, 41)
                                        .addComponent(btnHuyTT)))))
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jLabel44, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHoanThanhTT, btnHuyTT, btnInHoaDonTT});

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHuyChonTT, btnKTTT, btnThemMoiTT});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBan)
                            .addComponent(jLabel37))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel45)
                            .addComponent(lblOrder))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(lblGioVao))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel47)
                            .addComponent(lblGioRa))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48)
                            .addComponent(lblThanhToan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel43)
                            .addComponent(txtTenTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThemMoiTT))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel39)
                            .addComponent(txtSDTTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKTTT))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41)
                            .addComponent(txtEmailTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHuyChonTT))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addComponent(txtNgaySinhTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(rdoNamTT)
                            .addComponent(rdoNuTT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(cboSK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(lblCongtien))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGiam)
                            .addComponent(jLabel34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(lblTongcong))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                            .addComponent(lblThanhChu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel38)
                            .addComponent(txtKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(lblTraLai))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHoanThanhTT)
                            .addComponent(btnInHoaDonTT)
                            .addComponent(btnHuyTT)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(167, 167, 167))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnHoanThanhTT, btnHuyTT, btnInHoaDonTT});

        tabs.addTab("Thanh toán", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 615, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        pageIndexTB = 0;
        fillTable();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void cboTangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTangItemStateChanged
        if (cboTang.getItemCount() > 1) {
            pageIndexTB = 0;
            fillTable();
        }
    }//GEN-LAST:event_cboTangItemStateChanged

    private void rdoALLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdoALLMouseClicked
        pageIndexTB = 0;
        fillTable();
    }//GEN-LAST:event_rdoALLMouseClicked

    private void rdoTrongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdoTrongMouseClicked
        pageIndexTB = 0;
        fillTable();
    }//GEN-LAST:event_rdoTrongMouseClicked

    private void rdoCoKhachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdoCoKhachMouseClicked
        pageIndexTB = 0;
        fillTable();
    }//GEN-LAST:event_rdoCoKhachMouseClicked

    private void btnPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreActionPerformed
        pageIndexTB--;
        fillTable();
    }//GEN-LAST:event_btnPreActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        pageIndexTB++;
        fillTable();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        xacNhan();
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        huyChuyenBan();
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn2MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn2.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn2.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn2);
    }//GEN-LAST:event_btn2MouseClicked

    private void btn3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn3MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn3.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn3.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn3);
    }//GEN-LAST:event_btn3MouseClicked

    private void btn4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn4MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn4.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn4.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn4);
    }//GEN-LAST:event_btn4MouseClicked

    private void btn5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn5MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn5.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn5.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn5);
    }//GEN-LAST:event_btn5MouseClicked

    private void btn6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn6MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn6.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn6.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn6);
    }//GEN-LAST:event_btn6MouseClicked

    private void btn7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn7MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn7.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn7.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn7);
    }//GEN-LAST:event_btn7MouseClicked

    private void btn8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn8MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn8.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn8.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn8);
    }//GEN-LAST:event_btn8MouseClicked

    private void btn9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn9MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn9.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn9.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn9);
    }//GEN-LAST:event_btn9MouseClicked

    private void btn10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn10MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn10.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn10.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn10);
    }//GEN-LAST:event_btn10MouseClicked

    private void btn11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn11MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn11.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn11.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn11);
    }//GEN-LAST:event_btn11MouseClicked

    private void btn12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn12MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn12.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn12.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn12);
    }//GEN-LAST:event_btn12MouseClicked

    private void cboLoaiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLoaiItemStateChanged
        if (cboLoai.getItemCount() > 1) {
            fillTableDS();
        }
    }//GEN-LAST:event_cboLoaiItemStateChanged

    private void txtTimKiemTTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemTTKeyReleased
        fillTableDS();
    }//GEN-LAST:event_txtTimKiemTTKeyReleased

    private void txtTimKiemTTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemTTKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemTTKeyTyped

    private void btnThemVaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemVaoActionPerformed
        if (tblDS.getSelectedRow() >= 0) {
            themVao();
            updateStatus();
        } else {
            MsgBox.alert(this, "Vui lòng chọn sản phẩm!");
        }
    }//GEN-LAST:event_btnThemVaoActionPerformed

    private void btnLuuLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuLaiActionPerformed
        save();
    }//GEN-LAST:event_btnLuuLaiActionPerformed

    private void btnHuyMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyMonActionPerformed
        if (tblSP.getSelectedRow() >= 0) {
            huyMon();
        } else {
            MsgBox.alert(this, "Vui lòng chọn sản phẩm!");
        }
    }//GEN-LAST:event_btnHuyMonActionPerformed

    private void btnSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSoLuongActionPerformed
        if (tblSP.getSelectedRow() >= 0) {
            chinhSua();
        } else {
            MsgBox.alert(this, "Vui lòng chọn sản phẩm!");
        }
    }//GEN-LAST:event_btnSoLuongActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        if (!checkSave()) {
            List<BanCho> lst = new BanChoDAO().selectByBan(lblMaBan.getText());
            for (BanCho banCho : lst) {
                if (banCho.isHoanThanh() == false) {
                    MsgBox.alert(this, "Vui lòng hủy món chưa hoàn thành");
                    return;
                }
            }
            tabs.setSelectedIndex(5);
            maBan = lblMaBan.getText();
            setTextToLBTT();
            thanhToanTT();
            fillTableDSTT();
        } else {
            MsgBox.alert(this, "Vui lòng lưu lại thay đổi trước khi thanh toán!");
        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnHoanThanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHoanThanhActionPerformed
        if (!checkSave() && tblSP.getSelectedRow() >= 0) {
            hoanThanh();
        } else if (tblSP.getSelectedRow() < 0) {
            MsgBox.alert(this, "Vui lòng chọn sản phẩm!");
        } else {
            MsgBox.alert(this, "Vui lòng lưu lại thay đổi trước khi hoàn thành!");
        }
    }//GEN-LAST:event_btnHoanThanhActionPerformed

    private void btnChuyenBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChuyenBanActionPerformed
        if (!checkSave()) {
            chuyenBan();
        } else {
            MsgBox.alert(this, "Vui lòng lưu lại thay đổi trước khi chuyển bàn!");
        }
    }//GEN-LAST:event_btnChuyenBanActionPerformed

    private void tblDBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDBMouseClicked
        if (evt.getClickCount() == 2) {
            setFormDB(new BanDatDAO().selectByID(lstDB.get(tblDB.getSelectedRow()).getMaBan(), lstDB.get(tblDB.getSelectedRow()).getGioDat()));
            btnDatLich.setEnabled(false);
            tblDB.setEnabled(false);
            clickdatBan = true;
        }
    }//GEN-LAST:event_tblDBMouseClicked

    private void txtTimBanDatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimBanDatKeyReleased
        fillTableDB();
    }//GEN-LAST:event_txtTimBanDatKeyReleased

    private void btnThemMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemMoiActionPerformed
        themMoi();
    }//GEN-LAST:event_btnThemMoiActionPerformed

    private void btnKTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKTActionPerformed
        kiemTra();
    }//GEN-LAST:event_btnKTActionPerformed

    private void btnHuyChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyChonActionPerformed
        huyChon();
    }//GEN-LAST:event_btnHuyChonActionPerformed

    private void cboTangDBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTangDBItemStateChanged
        if (cboTangDB.getItemCount() > 1) {
            fillCboBan();
        }
    }//GEN-LAST:event_cboTangDBItemStateChanged

    private void btnDatLichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatLichActionPerformed
        datLich();
    }//GEN-LAST:event_btnDatLichActionPerformed

    private void btnHuyLichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyLichActionPerformed
        huyLich();
    }//GEN-LAST:event_btnHuyLichActionPerformed

    private void btnThayDoiLichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThayDoiLichActionPerformed
        thayDoiLich();
    }//GEN-LAST:event_btnThayDoiLichActionPerformed

    private void cboTangQLItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTangQLItemStateChanged
        if (cboTangQL.getItemCount() > 1) {
            fillTableQL();
        }
    }//GEN-LAST:event_cboTangQLItemStateChanged

    private void tblQLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQLMouseClicked
        if (evt.getClickCount() == 2) {
            rowQL = tblQL.getSelectedRow();
            setFormQL(new BanDAO().selectById(tblQL.getValueAt(tblQL.getSelectedRow(), 0).toString()));
            updateStatusQL();
        }
    }//GEN-LAST:event_tblQLMouseClicked

    private void btnThemBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemBanActionPerformed
        themBan();
    }//GEN-LAST:event_btnThemBanActionPerformed

    private void btnSuaBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaBanActionPerformed
        suaBan();
    }//GEN-LAST:event_btnSuaBanActionPerformed

    private void btnXoaBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaBanActionPerformed
        xoaBan();
    }//GEN-LAST:event_btnXoaBanActionPerformed

    private void btnKT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKT1ActionPerformed
        kiemTraCheckIn();
    }//GEN-LAST:event_btnKT1ActionPerformed

    private void btnHuyChon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyChon1ActionPerformed
        huyChonCI();
    }//GEN-LAST:event_btnHuyChon1ActionPerformed

    private void btnCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckInActionPerformed
        checkIn();
    }//GEN-LAST:event_btnCheckInActionPerformed

    private void btn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn1MouseClicked
        if (evt.getClickCount() == 2 && !btnXacNhan.isVisible()) {
            lblMaBan.setText(btn1.getToolTipText());
            fillTableSP(new BanChoDAO().selectByBan(btn1.getToolTipText()));
            tabs.setSelectedIndex(1);
        }
        setBorder(btn1);
    }//GEN-LAST:event_btn1MouseClicked

    private void btnHuyTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyTTActionPerformed
        dispose();
    }//GEN-LAST:event_btnHuyTTActionPerformed

    private void btnHoanThanhTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHoanThanhTTActionPerformed
        hoanThanhTT();
    }//GEN-LAST:event_btnHoanThanhTTActionPerformed

    private void txtKhachDuaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKhachDuaKeyReleased
        if (!(txtKhachDua.getText().length() == 0)) {
            try {
                traLaiTT();
            } catch (Exception e) {
                MsgBox.alert(this, "Nhập tiền không đúng định dạng!");
                txtKhachDua.setText("");
            }
        } else {
            lblTraLai.setText("0 đ");

        }
    }//GEN-LAST:event_txtKhachDuaKeyReleased

    private void cboSKItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSKItemStateChanged
        if (cboSK.getItemCount() > 1) {
            thanhToanTT();
        }
    }//GEN-LAST:event_cboSKItemStateChanged

    private void btnHuyChonTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyChonTTActionPerformed
        huyChonTT();
    }//GEN-LAST:event_btnHuyChonTTActionPerformed

    private void btnKTTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKTTTActionPerformed
        kiemTraTT();
    }//GEN-LAST:event_btnKTTTActionPerformed

    private void btnThemMoiTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemMoiTTActionPerformed
        themMoiTT();
    }//GEN-LAST:event_btnThemMoiTTActionPerformed

    private void btnInHoaDonTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHoaDonTTActionPerformed
        try {
            inHoaDon();
        } catch (BadElementException | IOException ex) {
            Logger.getLogger(IF_QuanLyBan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnInHoaDonTTActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        rowQL = -1;
        defaultFormQL();

    }//GEN-LAST:event_btnMoiActionPerformed
    void inHoaDon() throws BadElementException, IOException {
        List<Object[]> lst = new ArrayList<>();
        Object[] tt = new Object[12];
        tt[0] = Xdate.toString(new Date(), "yyyMMddhhmm") + lblMaBan.getText();
        tt[1] = Xdate.toString(new Date(), "yyyMMddhhmm") + lblMaBan.getText();
        tt[2] = lblBan.getText();
        tt[3] = txtTenTT.getText();
        tt[4] = lblGioVao.getText();
        tt[5] = lblGioRa.getText();
        tt[6] = lblThanhToan.getText();
        tt[7] = lblOrder.getText();
        tt[8] = lblCongtien.getText();
        tt[9] = lblGiam.getText();
        tt[10] = lblTongcong.getText();
        tt[11] = lblThanhChu.getText();
        lst.add(tt);
        for (int i = 0; i < tblSP1.getRowCount(); i++) {
            Object[] obj = new Object[3];
            obj[0] = tblSP1.getValueAt(i, 1).toString();
            obj[1] = tblSP1.getValueAt(i, 2).toString();
            obj[2] = tblSP1.getValueAt(i, 4).toString();
            lst.add(obj);
        }
        XBill.exportBill(lst);
        hoanThanhTT();
    }

    void huyChonCI() {
        setStatusFormCI(true);
        txtTen1.requestFocus();
        txtTen1.setText("");
        txtEmail1.setText("");
        txtNgaySinh1.setDate(null);
        rdoNam1.setSelected(true);
        rdoNu1.setSelected(false);
        txtSDT1.setText("");
        modelCI.setRowCount(0);
    }

    void themBan() {
        if (checkValidateQL()) {
            if (Integer.parseInt(getFormQL().getViTri()) < 0) {
                MsgBox.alert(this, "Tầng phải >= 0 !");
                return;
            }
            new BanDAO().insert(getFormQL());
            rowQL = -1;
            changeTable();
            MsgBox.alert(this, "Thêm bàn thành công");
        }
    }

    void suaBan() {
        if (checkValidateQL()) {
            if (Integer.parseInt(getFormQL().getViTri()) < 0) {
                MsgBox.alert(this, "Tầng phải >= 0 !");
                return;
            }
            new BanDAO().update(getFormQL());
            rowQL = -1;
            changeTable();
            MsgBox.alert(this, "Sửa bàn thành công");
        }
    }

    void xoaBan() {
        if (MsgBox.confirm(this, "Bạn có chắc chắn muốn xóa bàn này?")) {
            if (new BanDAO().selectById(txtMaBan.getText()).isSanSang() == false) {
                MsgBox.alert(this, "Bạn không thể xóa bàn đang có khách?");
                return;
            } else {
                new BanDAO().delete(txtMaBan.getText());
                changeTable();
                MsgBox.alert(this, "Xóa bàn thành công");
            }

        }
    }

    void fillTableCI(List<BanDat> lst) {
        modelCI.setRowCount(0);
        for (BanDat bD : lst) {
            modelCI.addRow(new Object[]{new KhachHangDao().selectById(bD.getMaKH()).getTenKH(),
                new BanDAO().selectById(bD.getMaBan()).getTenBan(),
                bD.getGioDat()});
        }
    }

    void changeTable() {
        fillCboTable();
        fillCboTangDB();
        fillCboTangQL();
        fillCboBan();
        fillTable();
        fillTableQL();
        defaultFormQL();
        updateStatusQL();
    }

    void datLich() {
        if (checkDatBan()) {
            new BanDatDAO().insert(getFormDB());
            MsgBox.alert(this, "Đặt lịch thành công!");
            fillTableDB();
            resetFormDB();
        }
    }

    void thayDoiLich() {
        if (checkDatBan()) {
            new BanDatDAO().updateDB(getFormDB(), lstDB.get(tblDB.getSelectedRow()).getMaBan(), lstDB.get(tblDB.getSelectedRow()).getGioDat());
            MsgBox.alert(this, "Thay đổi lịch thành công!");
            fillTableDB();
            resetFormDB();
        }
    }

    void huyLich() {
        if (MsgBox.confirm(this, "Bạn có chắc chắn muốn xóa lịch đặt này?")) {
            new BanDatDAO().deleteDB(lstDB.get(tblDB.getSelectedRow()).getMaBan(), lstDB.get(tblDB.getSelectedRow()).getGioDat());
            MsgBox.alert(this, "Xóa lịch đặt thành công!");
            fillTableDB();
            resetFormDB();
        }
    }

    void resetFormDB() {
        setStatusFormDB(true);
        txtTen.setText("");
        txtEmail.setText("");
        txtNgaySinh.setDate(null);
        rdoNam.setSelected(true);
        rdoNu.setSelected(false);
        txtSDT.setText("");
        cboTangDB.setSelectedIndex(0);
        cboBan.setSelectedIndex(0);
        cboPhut.setSelectedIndex(0);
        cboGio.setSelectedIndex(0);
        txtNgaydat.setDate(null);
        tblDB.setEnabled(true);
        clickdatBan = false;
    }

    Timer t;

    void huyChon() {
        setStatusFormDB(true);
        txtTen.setText("");
        txtTen.requestFocus();
        txtEmail.setText("");
        txtNgaySinh.setDate(null);
        rdoNam.setSelected(true);
        rdoNu.setSelected(false);
        txtSDT.setText("");
    }

    void fillCboBan() {
        lstALL = new BanDAO().selectALL(getCboTangDB(), "1");
        cboBan.removeAllItems();
        for (Ban b : lstALL) {
            cboBan.addItem(b.getTenBan());
        }
    }

    void fillTableDB() {
        lstDB = new BanDatDAO().selectALL();
        modelDB.setRowCount(0);
        for (BanDat banDat : lstDB) {
            if (new BanDAO().selectById(banDat.getMaBan()).getTenBan().toUpperCase().contains(txtTimBanDat.getText().toUpperCase().trim())
                    || new KhachHangDao().selectById(banDat.getMaKH()).getTenKH().toUpperCase().contains(txtTimBanDat.getText().toUpperCase().trim())) {
                modelDB.addRow(new Object[]{
                    new BanDAO().selectById(banDat.getMaBan()).getTenBan(),
                    new KhachHangDao().selectById(banDat.getMaKH()).getTenKH(),
                    banDat.getGioDat(),
                    new NhanVienDAO().selectById(banDat.getMaNV()).getTenNV()
                });
            }
        }
    }

    void setFormDB(BanDat ban) {
        KhachHang kh = new KhachHangDao().selectById(ban.getMaKH());
        Ban b = new BanDAO().selectById(ban.getMaBan());
        txtTen.setText(kh.getTenKH());
        txtNgaySinh.setDate(kh.getNgaysinh());
        txtSDT.setText(kh.getSDT());
        txtEmail.setText(kh.getEmail());
        rdoNam.setSelected(kh.isGioiTinh());
        rdoNu.setSelected(!kh.isGioiTinh());
        setStatusFormDB(false);
        cboTangDB.setSelectedItem(b.getViTri());
        cboBan.setSelectedItem(b.getTenBan());
        txtNgaydat.setDate(Xdate.toDate(ban.getGioDat().substring(ban.getGioDat().indexOf(", ") + 2), "dd/MM/yyyy"));
        cboGio.setSelectedItem(ban.getGioDat().substring(0, 2));
        cboPhut.setSelectedItem(ban.getGioDat().substring(3, 5));
    }

    BanDat getFormDB() {
        KhachHang kh = new KhachHangDao().selectSDT(txtSDT.getText());
        String gioDat = cboGio.getSelectedItem().toString() + ":" + cboPhut.getSelectedItem().toString() + " - " + Xdate.toString(txtNgaydat.getDate(), "EE, dd/MM/yyyy");
        return new BanDat(lstALL.get(cboBan.getSelectedIndex()).getMaBan(), gioDat, kh.getMaKH(), Auth.user.getMaNV());
    }

    void fillCboGD() {
        cboGio.removeAllItems();
        cboPhut.removeAllItems();
        for (int i = 7; i < 23; i++) {
            if (i >= 10) {
                cboGio.addItem(i + "");
            } else {
                cboGio.addItem("0" + i);
            }
        }
        for (int i = 0; i < 60; i++) {
            if (i >= 10) {
                cboPhut.addItem(i + "");
            } else {
                cboPhut.addItem("0" + i);
            }
        }
    }

    boolean checkValidate() {
        String pEmail = "^[A-Za-z0-9]+[A-Za-z0-9]*+@fpt.edu.vn$";
        String pSDT = "^0[0-9]{9}$";
        String s = txtTen.getText().replaceAll("[^0-9]", "");
        String pKiTu = txtTen.getText().replaceAll("[^!@#$%&*()_+=|<>?{}\\\\[\\\\]~-]", "");
        if (txtTen.getText().trim().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập tên khách hàng!");
            txtTen.requestFocus();
            return false;
        } else if ((txtTen.getText().trim().matches(s))) {
            MsgBox.alert(this, "Tên khách hàng phải chứa kí tự chữ");
            txtTen.requestFocus();
            return false;
        } else if ((txtTen.getText().trim().matches(pKiTu))) {
            MsgBox.alert(this, "Tên khách hàng không được chứa kí tự đặc biệt");
            txtTen.requestFocus();
            return false;
        } else if (!(txtTen.getText().trim().length() >= 6 && txtTen.getText().trim().length() <= 50)) {
            MsgBox.alert(this, "Họ tên khách hàng chứa từ 6 đến 50 kí tự");
            txtTen.requestFocus();
            return false;
        } else if (txtSDT.getText().trim().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập SDT khách hàng!");
            txtSDT.requestFocus();
            return false;
        } else if (!txtSDT.getText().trim().matches(pSDT)) {
            MsgBox.alert(this, "SDT không đúng định dạng!");
            txtSDT.requestFocus();
            return false;
        } else if (txtEmail.getText().trim().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập email khách hàng!");
            txtEmail.requestFocus();
            return false;
        } else if (!txtEmail.getText().trim().matches(pEmail)) {
            MsgBox.alert(this, "Email không đúng định dạng!");
            txtEmail.requestFocus();
            return false;
        } else if (txtNgaySinh.getDate() == null) {
            MsgBox.alert(this, "Vui lòng nhập ngày sinh khách hàng!");
            return false;
        }
        return true;
    }

    boolean checkDatBan() {
        if (txtNgaydat.getDate() == null) {
            MsgBox.alert(this, "Vui lòng chọn ngày đặt!");
            return false;
        }
        String gioDat = cboGio.getSelectedItem().toString() + ":" + cboPhut.getSelectedItem().toString() + " - " + Xdate.toString(txtNgaydat.getDate(), "EE, dd/MM/yyyy");
        if (Xdate.toDate(gioDat, "hh:mm - EE, dd/MM/yyyy").before(Xdate.toDate(Xdate.toString(new Date(), "hh:mm - EE, dd/MM/yyyy"), "hh:mm - EE, dd/MM/yyyy")) && !gioDat.substring(0, 2).equals("12")) {
            MsgBox.alert(this, "Thời gian đặt phải sau ngày giờ hiện tại!");
            return false;
        }
        List<BanDat> lst = new BanDatDAO().selectByDay(lstALL.get(cboBan.getSelectedIndex()).getMaBan(), Xdate.toString(txtNgaydat.getDate(), "EE, dd/MM/yyyy"));
        if (lst != null) {
            int truoc = (Integer.parseInt(gioDat.substring(0, 2)) - 1);
            int sau = (Integer.parseInt(gioDat.substring(0, 2)) + 1);
            String truocGioDat = (truoc < 10 ? "0" + truoc : truoc) + gioDat.substring(2);
            String sauGioDat = (sau < 10 ? "0" + sau : sau) + gioDat.substring(2);
            if (!clickdatBan) {
                for (BanDat bd : lst) {

                    if (Xdate.toDate(bd.getGioDat(), "hh:mm - EE, dd/MM/yyyy").after(Xdate.toDate(truocGioDat, "hh:mm - EE, dd/MM/yyyy"))
                            && Xdate.toDate(bd.getGioDat(), "hh:mm - EE, dd/MM/yyyy").before(Xdate.toDate(sauGioDat, "hh:mm - EE, dd/MM/yyyy"))) {
                        MsgBox.alert(this, "Bàn này đã có lịch đặt vào lúc " + bd.getGioDat() + " vui lòng chọn lịch đặt khác!");
                        return false;
                    }
                }
            } else {
                System.out.println("đã click");
                BanDat b = lstDB.get(tblDB.getSelectedRow());
                for (BanDat bd : lst) {
                    if (!(b.getMaBan().equals(bd.getMaBan()) && b.getGioDat().equals(bd.getGioDat()))) {
                        if (Xdate.toDate(bd.getGioDat(), "hh:mm - EE, dd/MM/yyyy").after(Xdate.toDate(truocGioDat, "hh:mm - EE, dd/MM/yyyy"))
                                && Xdate.toDate(bd.getGioDat(), "hh:mm - EE, dd/MM/yyyy").before(Xdate.toDate(sauGioDat, "hh:mm - EE, dd/MM/yyyy"))) {
                            MsgBox.alert(this, "Bàn này đã có lịch đặt vào lúc " + bd.getGioDat() + " vui lòng chọn lịch đặt khác!");
                            return false;
                        }
                    }
                }
            }
        }
        return true;
    }

    void themMoi() {
        if (checkValidate()) {
            KhachHang kh = new KhachHang(txtTen.getText().trim(), txtSDT.getText().trim(), txtEmail.getText().trim(), txtNgaySinh.getDate(), rdoNam.isSelected(), Auth.user.getMaNV(), true);
            new KhachHangDao().insertNoID(kh);
            MsgBox.alert(this, "Thêm mới thành công");
        }
    }

    void kiemTra() {
        if (txtSDT.getText().trim().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập số điện thoại!");
        } else {
            KhachHang ks = new KhachHangDao().selectSDT(txtSDT.getText().trim());
            if (!(ks == null)) {
                txtTen.setText(ks.getTenKH());
                txtEmail.setText(ks.getEmail());
                txtNgaySinh.setDate(ks.getNgaysinh());
                rdoNam.setSelected(ks.isGioiTinh());
                rdoNu.setSelected(!ks.isGioiTinh());
                setStatusFormDB(false);
                if (clickdatBan) {
                    btnDatLich.setEnabled(false);
                } else {
                    btnThayDoiLich.setEnabled(false);
                    btnHuyLich.setEnabled(false);
                }
            } else {
                MsgBox.alert(this, "Số điện thoại không tồn tại!");
            }
        }
    }

    void kiemTraCheckIn() {
        if (txtSDT1.getText().trim().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập số điện thoại!");
        } else {
            KhachHang ks = new KhachHangDao().selectSDT(txtSDT1.getText().trim());
            if (!(ks == null)) {
                txtTen1.setText(ks.getTenKH());
                txtEmail1.setText(ks.getEmail());
                txtNgaySinh1.setDate(ks.getNgaysinh());
                rdoNam1.setSelected(ks.isGioiTinh());
                rdoNu1.setSelected(!ks.isGioiTinh());
                setStatusFormCI(false);
                lstCI = new BanDatDAO().selectByMaKH(ks.getMaKH());
                fillTableCI(lstCI);
            } else {
                MsgBox.alert(this, "Số điện thoại không tồn tại!");
            }
        }
    }

    void setStatusFormCI(boolean done) {
        txtSDT1.setEnabled(done);
        txtEmail1.setEnabled(done);
        txtTen1.setEnabled(done);
        txtNgaySinh1.setEnabled(done);
        rdoNam1.setEnabled(done);
        rdoNu1.setEnabled(done);
        btnKT1.setEnabled(done);
        btnHuyChon1.setEnabled(!done);
        rdoNam1.setSelected(done);
        btnCheckIn.setEnabled(!done);
    }

    void setStatusFormDB(boolean done) {
        txtSDT.setEnabled(done);
        txtEmail.setEnabled(done);
        txtTen.setEnabled(done);
        txtNgaySinh.setEnabled(done);
        rdoNam.setEnabled(done);
        rdoNu.setEnabled(done);
        btnThemMoi.setEnabled(done);
        btnKT.setEnabled(done);
        btnHuyChon.setEnabled(!done);
        rdoNam.setSelected(done);
        cboTangDB.setEnabled(!done);
        cboBan.setEnabled(!done);
        btnDatLich.setEnabled(!done);
        btnThayDoiLich.setEnabled(!done);
        btnHuyLich.setEnabled(!done);
        txtNgaydat.setEnabled(!done);
        cboGio.setEnabled(!done);
        cboPhut.setEnabled(!done);
    }

    void updateStatus() {
        boolean check = tblSP.getRowCount() > 0;
        boolean click = lblMaBan.getText().equalsIgnoreCase("CHƯA CHỌN BÀN");

        btnThemVao.setEnabled(!click);
        btnHuyMon.setEnabled(check);
        btnSoLuong.setEnabled(check);
        btnLuuLai.setEnabled(check);
        btnChuyenBan.setEnabled(check);
        btnThanhToan.setEnabled(check);
        btnHoanThanh.setEnabled(check);
        btnLuuLai.setEnabled(huyMon);
    }

    boolean checkSave() {
        if (new BanDAO().selectCount(lblMaBan.getText().trim()) < tblSP.getRowCount() || checkSave) {
            return true;
        }
        return false;
    }

    void huyChuyenBan() {
        if (MsgBox.confirm(this, "Bạn có chắc chắn muốn hủy chuyển bàn?")) {
            btnHuy.setVisible(false);
            btnXacNhan.setVisible(false);
        }
    }

    void setBorder(JLabel lb) {
        Component cm[] = pnlBan.getComponents();
        for (int i = 0; i < cm.length; i++) {
            ((JLabel) cm[i]).setBorder(null);
        }
        lb.setBorder(BorderFactory.createLineBorder(Color.BLACK, 3));
    }

    void chuyenBan() {
        btnXacNhan.setVisible(true);
        btnHuy.setVisible(true);
        tabs.setSelectedIndex(0);
    }

    void fillTableSP(List<BanCho> lst) {
        huyMon = true;
        modelSP.setRowCount(0);
        for (BanCho bc : lst) {
            SanPham sp = new SanPhamDAO().selectById(bc.getMaSP());
            modelSP.addRow(new Object[]{
                bc.getMaSP(),
                sp.getTenSanPham(),
                bc.getSoLuong(),
                sp.getDonViTinh(),
                Xcurrency.toCurrency(bc.getGia()),
                Xcurrency.toCurrency(bc.getGia() * bc.getSoLuong()),
                bc.isHoanThanh() ? "Đã hoàn thành" : "Đang làm"
            });
        }
        fillTableDS();
    }

    void init() {
        setSize(1130, 670);
        setResizable(false);
        setDefaultCloseOperation(2);
        setTitle("QUẢN LÝ BÀN");
        Auth.user = new NhanVienDAO().selectById("NV01");//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
        jPanel4.setBackground(new Color(Integer.parseInt(Auth.user.getMauNen(), 16)));
        daoBan = new BanDAO();
        prepareGUI();

    }

    void prepareGUI() {
        fillCboTable();
        fillTable();
        fillCboLoai();
        setTableSP();
        setTableDS();
        fillTableDS();
        defaultForm();
        resetFormDB();
        fillCboTangDB();
        fillCboBan();
        fillCboGD();
        setTableDB();
        fillTableDB();
        setTableQL();
        fillCboTangQL();
        defaultFormQL();
        fillTableQL();
        setTableCI();
        huyChonCI();
        prepareGUITT();
    }

    void setTableSP() {
        String h[] = {"Mã sản phẩm", "Tên sản phẩm", "Số lượng", "ĐVT", "Đơn giá", "Tổng tiền", "Trạng thái"};
        modelSP = new DefaultTableModel(h, 0) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }
        };
        tblSP.setModel(modelSP);
    }

    void setTableQL() {
        String h[] = {"Mã bàn", "Tên bàn", "Tầng", "Trạng thái"};
        modelQL = new DefaultTableModel(h, 0) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }
        };
        tblQL.setModel(modelQL);
    }

    void setTableCI() {
        String h[] = {"Tên khách hàng", "Bàn đặt", "Thời gian"};
        modelCI = new DefaultTableModel(h, 0) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }
        };
        tblCI.setModel(modelCI);
    }

    void fillTableQL() {
        updateStatusTable();
        List<Ban> lst = daoBan.selectALL(getCboTangQL(), "1");
        modelQL.setRowCount(0);
        for (Ban ban : lst) {
            modelQL.addRow(new Object[]{ban.getMaBan(), ban.getTenBan(), ban.getViTri(), ban.isSanSang() ? "Còn trống" : "Có khách"});
        }
    }

    void save() {
        try {
            new BanChoDAO().delete(lblMaBan.getText());
            for (int i = 0; i < tblSP.getRowCount(); i++) {
                BanCho bc = new BanCho(lblMaBan.getText(),
                        tblSP.getValueAt(i, 0).toString(),
                        Xcurrency.toInt(tblSP.getValueAt(i, 2).toString()),
                        Xcurrency.toInt(tblSP.getValueAt(i, 4).toString()),
                        Xdate.toString(new Date(), "hh:mm:ss - EE, dd/MM/yyyy"),
                        Auth.user.getMaNV(),
                        tblSP.getValueAt(i, 6).toString().equalsIgnoreCase("Đã hoàn thành"));
                new BanChoDAO().insert(bc);
                checkSave = false;
            }
            MsgBox.alert(this, "Cập nhật dữ liệu thành công");
            fillTable();
            defaultForm();
            tabs.setSelectedIndex(0);
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật dữ liệu thất bại");
            e.printStackTrace();
        }
    }

    void checkIn() {
        if (tblCI.getSelectedRow() >= 0) {
            BanDat bd = lstCI.get(tblCI.getSelectedRow());
            BanCho bc = new BanCho(bd.getMaBan(), "PDB", 1, new SanPhamDAO().selectById("PDB").getDonGia(), bd.getGioDat(), bd.getMaNV(), true);
            new BanDatDAO().deleteDB(bd.getMaBan(), bd.getGioDat());
            new BanChoDAO().insert(bc);
            huyChonCI();
            lblMaBan.setText(bd.getMaBan());
            fillTableSP(new BanChoDAO().selectByBan(bd.getMaBan()));
            tabs.setSelectedIndex(1);
        } else {
            MsgBox.alert(this, "Vui lòng chọn bàn cần check in!");
        }

    }

    void updateStatusTable() {
        List<String> str = new BanChoDAO().selectStatusTable();
        for (String x : str) {
            Ban b = new BanDAO().selectById(x);
            b.setSanSang(false);
            new BanDAO().update(b);
        }
    }

    String getCboLoai() {
        if (cboLoai.getSelectedIndex() == 0) {
            return "";
        } else {
            return lstLSP.get(cboLoai.getSelectedIndex() - 1).getMaLoaiSP();
        }
    }

    void fillTableDS() {
        List<SanPham> lst = new SanPhamDAO().selectByLoai("%" + getCboLoai() + "%");
        modelDS.setRowCount(0);
        for (SanPham sp : lst) {
            if ((sp.getMaSP().toUpperCase().contains(txtTimKiemTT.getText().toUpperCase().trim()) || sp.getTenSanPham().toUpperCase().contains(txtTimKiemTT.getText().toUpperCase().trim())) && checkSP(sp.getMaSP())) {;
                modelDS.addRow(new Object[]{sp.getMaSP(), sp.getTenSanPham(), sp.getDonViTinh(), Xcurrency.toCurrency(sp.getDonGia())});
            }
        }
        updateStatus();
    }

    void huyMon() {
        if (MsgBox.confirm(this, "Bạn có chắc chắn muốn hủy món này?")) {
            if (!tblSP.getValueAt(tblSP.getSelectedRow(), 6).equals("Đã hoàn thành")) {
                huyMon = true;
                checkSave = true;
                modelSP.removeRow(tblSP.getSelectedRow());
                fillTableDS();
            } else {
                MsgBox.alert(this, "Món ăn đã hoàn thành không thể hủy món");
            }
        }
    }

    void defaultForm() {
        modelSP.setRowCount(0);
        lblMaBan.setText("CHƯA CHỌN BÀN");
        huyMon = false;
        btnXacNhan.setVisible(false);
        btnHuy.setVisible(false);
        checkSave = false;
        updateStatus();
    }

    boolean checkSP(String maSP) {
        for (int i = 0; i < tblSP.getRowCount(); i++) {
            if (maSP.equals(tblSP.getValueAt(i, 0))) {
                return false;
            }
        }
        return true;
    }

    void fillCboTangDB() {
        List<String> lst = daoBan.selectTang();
        cboTangDB.removeAllItems();
        cboTangDB.addItem("Tất cả");
        lst.forEach((str) -> {
            cboTangDB.addItem(str);
        });

    }

    void fillCboTangQL() {
        List<String> lst = daoBan.selectTang();
        cboTangQL.removeAllItems();
        cboTangQL.addItem("Tất cả");
        lst.forEach((str) -> {
            cboTangQL.addItem(str);
        });

    }

    void setTableDS() {
        String h[] = {"Mã sản phẩm", "Tên sản phẩm", "ĐVT", "Đơn giá"};
        modelDS = new DefaultTableModel(h, 0) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }

        };
        tblDS.setModel(modelDS);
    }

    void setTableDB() {
        String h[] = {"Tên bàn", "Tên khách hàng", "Giờ đặt", "Nhân viên đặt"};
        modelDB = new DefaultTableModel(h, 0) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }

        };
        tblDB.setModel(modelDB);
    }

    void updateStatusPage() {
        boolean firstTB = pageIndexTB == 0;
        boolean lastTB = daoBan.selectPagingFull(1, getCboTable(), txtTimKiem.getText(), getRdoSatus(), pageIndexTB + 1).isEmpty();

        btnPre.setEnabled(!firstTB);
        btnNext.setEnabled(!lastTB);

    }

    void fillCboTable() {
        List<String> lst = daoBan.selectTang();
        cboTang.removeAllItems();
        cboTang.addItem("Tất cả");
        lst.forEach((str) -> {
            cboTang.addItem(str);
        });

    }

    void themVao() {
        String sl = MsgBox.promt(this, "Vui lòng nhập số lượng?");
        try {
            int x = Integer.parseInt(sl);
            int row = tblDS.getSelectedRow();
            if (x <= 0) {
                MsgBox.alert(this, "Số lượng cần lớn hơn 0");
                return;
            }
            modelSP.addRow(new Object[]{tblDS.getValueAt(row, 0), tblDS.getValueAt(row, 1), x, tblDS.getValueAt(row, 2), Xcurrency.toCurrency(Xcurrency.toInt(tblDS.getValueAt(row, 3).toString())), Xcurrency.toCurrency(Xcurrency.toInt(tblDS.getValueAt(row, 3).toString()) * x), "Đang làm"});
            modelDS.removeRow(row);
        } catch (Exception e) {
            MsgBox.alert(this, "Số lượng không đúng định dạng");
            e.printStackTrace();
        }
    }

    String getSelectedTable() {
        Component cm[] = pnlBan.getComponents();
        String tableName = null;
        for (int i = 0; i < cm.length; i++) {
            if (!(((JLabel) cm[i]).getBorder() == null)) {
                tableName = ((JLabel) cm[i]).getToolTipText();
            }
        }
        return tableName;
    }

    boolean checkTable(String maBan) {
        List<String> lst = new BanChoDAO().selectStatusTable();
        for (String str : lst) {
            if (str.equals(maBan)) {
                return false;
            }
        }
        return true;
    }

    void xacNhan() {
        if (checkTable(getSelectedTable())) {
            if (MsgBox.confirm(this, "Bạn có chắc chắn muốn chuyển từ bàn " + lblMaBan.getText() + " đến bàn " + getSelectedTable() + " không?")) {
                new BanChoDAO().chuyenBan(getSelectedTable(), new BanChoDAO().selectByBan(lblMaBan.getText()));
                fillTable();
                defaultForm();
                btnXacNhan.setVisible(false);
                MsgBox.alert(this, "Chuyển bàn thành công!");
            }
        } else {
            MsgBox.alert(this, "Không thể chuyển đến bàn này!!");
        }
    }

    void chinhSua() {
        String sl = MsgBox.promt(this, "Vui lòng nhập số lượng?");
        try {
            int slt = Integer.parseInt(sl);
            int row = tblSP.getSelectedRow();
            if (slt <= 0) {
                MsgBox.alert(this, "Số lượng cần lớn hơn 0");
                return;
            }
            if (slt > Integer.parseInt(tblSP.getValueAt(row, 2).toString())) {
                tblSP.setValueAt("Đang làm", row, 6);
            } else {
                tblSP.setValueAt("Đã hoàn thành", row, 6);
            }
            int tongTien = Xcurrency.toInt(tblSP.getValueAt(row, 5).toString()) / Integer.parseInt(tblSP.getValueAt(row, 2).toString()) * slt;
            tblSP.setValueAt(Xcurrency.toCurrency(tongTien), row, 5);
            tblSP.setValueAt(slt, row, 2);
            checkSave = true;
            updateStatus();
        } catch (Exception e) {
            MsgBox.alert(this, "Số lượng không đúng định dạng");
        }
    }

    void fillTable() {
        updateStatusTable();
        List<Ban> lst = daoBan.selectPagingFull(1, getCboTable(), txtTimKiem.getText().trim(), getRdoSatus(), pageIndexTB);
        Component cm[] = pnlBan.getComponents();
        for (int i = 0; i < cm.length - 1; i++) {
            try {
                ((JLabel) cm[i + 1]).setBorder(null);
                ((JLabel) cm[i + 1]).setVisible(true);
                ((JLabel) cm[i + 1]).setText(lst.get(i).getTenBan());
                ((JLabel) cm[i + 1]).setToolTipText(lst.get(i).getMaBan());
                if (!lst.get(i).isSanSang()) {
                    ((JLabel) cm[i + 1]).setBackground(new Color(244, 164, 96));
                } else {
                    ((JLabel) cm[i + 1]).setBackground(new Color(127, 255, 212));
                }
            } catch (Exception e) {
                ((JLabel) cm[i + 1]).setVisible(false);
            }
        }
        ((JLabel) cm[0]).setBackground(new Color(127, 255, 212));
        ((JLabel) cm[0]).setToolTipText("MV");
        lbTable.setText(pageIndexTB + 1 + "");
        List<BanCho> lstMV = new BanChoDAO().selectByBan("MV");
        if (lstMV.isEmpty()) {
            ((JLabel) cm[0]).setBackground(new Color(127, 255, 212));
        } else {
            ((JLabel) cm[0]).setBackground(new Color(244, 164, 96));
        }
        updateStatusPage();
    }

    String getCboTable() {
        if (cboTang.getSelectedIndex() == 0) {
            return "";
        } else {
            return cboTang.getSelectedItem().toString();
        }
    }

    void hoanThanh() {
        if (MsgBox.confirm(this, "Xác nhận hoàn thành món?")) {
            BanCho bc = new BanChoDAO().selectByID(lblMaBan.getText(), tblSP.getValueAt(tblSP.getSelectedRow(), 0).toString());
            bc.setHoanThanh(true);
            new BanChoDAO().update(bc);
            tblSP.setValueAt("Đã hoàn thành", tblSP.getSelectedRow(), 6);
        }
    }

    String getCboTangDB() {
        if (cboTangDB.getSelectedIndex() == 0) {
            return "";
        } else {
            return cboTangDB.getSelectedItem().toString();
        }
    }

    String getCboTangQL() {
        if (cboTangQL.getSelectedIndex() == 0) {
            return "";
        } else {
            return cboTangQL.getSelectedItem().toString();
        }
    }

    String getRdoSatus() {
        if (rdoALL.isSelected()) {
            return "";
        } else if (rdoTrong.isSelected()) {
            return "1";
        } else if (rdoCoKhach.isSelected()) {
            return "0";
        }
        return null;
    }

    void defaultFormQL() {
        updateStatusQL();
        txtTenBan.setText("");
        txtMaBan.setText("");
        txtTang.setValue(0);
    }

    Ban getFormQL() {
        if (rowQL >= 0) {
            Ban b = new BanDAO().selectById(txtMaBan.getText());
            b.setTenBan(txtTenBan.getText());
            b.setViTri(txtTang.getValue().toString());
            return b;
        } else {
            return new Ban(txtMaBan.getText(), txtTenBan.getText(), txtTang.getValue().toString(), true, true);
        }
    }

    void setFormQL(Ban ban) {
        txtMaBan.setText(ban.getMaBan());
        txtTenBan.setText(ban.getTenBan());
        txtTang.setValue(Integer.parseInt(ban.getViTri()));
    }

    boolean checkValidateQL() {
        String s = txtTenBan.getText().replaceAll("[^0-9]", "");
        String pKiTu = txtTenBan.getText().replaceAll("[^!@#$%&*()_+=|<>?{}\\\\[\\\\]~-]", "");
        if (txtMaBan.getText().trim().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập mã bàn!");
            txtMaBan.requestFocus();
            return false;
        } else if ((txtMaBan.getText().trim().matches(pKiTu))) {
            MsgBox.alert(this, "Mã bàn không được chứa kí tự đặc biệt");
            txtMaBan.requestFocus();
            return false;
        } else if (new BanDAO().selectById(txtMaBan.getText()) != null && tblQL.getSelectedRow() < 0) {
            MsgBox.alert(this, "Mã bàn đã tồn tại!");
            txtTenBan.requestFocus();
            return false;
        } else if (txtTenBan.getText().trim().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập tên bàn!");
            txtTenBan.requestFocus();
            return false;
        } else if ((txtTenBan.getText().trim().matches(pKiTu))) {
            MsgBox.alert(this, "Tên Bàn không được chứa kí tự đặc biệt");
            txtTenBan.requestFocus();
            return false;
        } else if (!(txtTenBan.getText().trim().length() <= 50)) {
            MsgBox.alert(this, "Tên bàn không quá 50 kí tự");
            txtTenBan.requestFocus();
            return false;
        }
        return true;
    }

    void updateStatusQL() {
        boolean row = rowQL >= 0;
        btnThemBan.setEnabled(!row);
        btnMoi.setEnabled(row);
        btnSuaBan.setEnabled(row);
        btnXoaBan.setEnabled(row);
        txtMaBan.setEnabled(!row);
    }

    void fillCboLoai() {
        lstLSP = new LoaiSanPhamDAO().selectAll();
        cboLoai.removeAllItems();
        cboLoai.addItem("Tất cả");
        lstLSP.forEach(x -> {
            cboLoai.addItem(x.getTenLoaiSP());
        });
    }

    void prepareGUITT() {
        setTableSPTT();
        DefaultFormTT(true);
        fillCboSKTT();
        resetFormTT();
    }

    void DefaultFormTT(boolean done) {
        btnHoanThanhTT.setEnabled(!done);
        btnInHoaDonTT.setEnabled(!done);
        txtSDTTT.setEnabled(done);
        txtEmailTT.setEnabled(done);
        txtTenTT.setEnabled(done);
        txtNgaySinhTT.setEnabled(done);
        btnHuyChonTT.setEnabled(!done);
        txtKhachDua.setEnabled(!done);
    }

    void huyChonTT() {
        DefaultFormTT(true);
        txtTenTT.setText("");
        txtEmailTT.setText("");
        txtNgaySinhTT.setDate(null);
        rdoNamTT.setSelected(true);
        txtSDTTT.setText("");
        rdoNamTT.setEnabled(true);
        rdoNuTT.setEnabled(true);
        btnKTTT.setEnabled(true);
        btnThemMoiTT.setEnabled(true);
    }

    void traLaiTT() {
        int tongCong = Xcurrency.toInt(lblTongcong.getText());
        int traLai = Integer.parseInt(txtKhachDua.getText()) - tongCong;
        if (traLai >= 0 && tblSP1.getRowCount() > 0) {
            lblTraLai.setText(Xcurrency.toCurrency(traLai));
            btnHoanThanhTT.setEnabled(true);
            btnInHoaDonTT.setEnabled(true);
        } else {
            lblTraLai.setText("Còn thiếu " + Xcurrency.toCurrency(Math.abs(traLai)));
            btnHoanThanhTT.setEnabled(false);
            btnInHoaDonTT.setEnabled(false);
        }
    }

    void setTextToLBTT() {
        lblBan.setText(new BanDAO().selectById(maBan).getTenBan());
        lblOrder.setText(new NhanVienDAO().selectById(new BanChoDAO().getNV(maBan)).getTenNV());
        lblGioVao.setText(new BanChoDAO().getTimeIn(maBan));
        lblGioRa.setText(Xdate.toString(new Date(), "hh:mm:ss - EE, dd/MM/yyyy"));
        lblThanhToan.setText(Auth.user.getTenNV());
    }

    void thanhToanTT() {
        lblCongtien.setText(getCongTienTT());
        lblGiam.setText(getGiamTT());
        lblTongcong.setText(getTongCongTT());
        lblThanhChu.setText(Xcurrency.readNumber(Xcurrency.toInt(lblTongcong.getText())) + "Đồng");
        if (txtKhachDua.getText().length() > 0) {
            traLaiTT();
        }
    }

    String getTongCongTT() {
        int tongCong = Xcurrency.toInt(lblCongtien.getText()) - Xcurrency.toInt(lblGiam.getText());
        return Xcurrency.toCurrency(tongCong);
    }

    String getGiamTT() {
        if (cboSK.getItemCount() > 0) {
            int tienGiam = Xcurrency.toInt(lblCongtien.getText());
            double giaTri = lstSKKM.get(cboSK.getSelectedIndex()).getGiaTriKM();
            return Xcurrency.toCurrency((int) Math.round(tienGiam * giaTri / 100));
        } else {
            return "0 đ";
        }
    }

    String getCongTienTT() {
        int tongTien = 0;
        for (int i = 0; i < tblSP.getRowCount(); i++) {
            tongTien += Xcurrency.toInt(tblSP.getValueAt(i, 5).toString());
        }
        return Xcurrency.toCurrency(tongTien);
    }

    void fillCboSKTT() {
        cboSK.removeAllItems();
        lstSKKM = new SKKMDAO().selectSKDDR(1, Xdate.toString(new Date(), "yyyy-MM-dd"));
        for (SuKienKhuyenMai sk : lstSKKM) {
            cboSK.addItem(sk.getTenSKKM());
        }
    }

    void kiemTraTT() {
        if (txtSDTTT.getText().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập số điện thoại!");
        } else {
            KhachHang ks = new KhachHangDao().selectSDT(txtSDTTT.getText());
            if (!(ks == null)) {
                txtTenTT.setText(ks.getTenKH());
                txtEmailTT.setText(ks.getEmail());
                txtNgaySinhTT.setDate(ks.getNgaysinh());
                rdoNamTT.setSelected(ks.isGioiTinh());
                rdoNuTT.setSelected(!ks.isGioiTinh());
                txtSDTTT.setEnabled(false);
                txtEmailTT.setEnabled(false);
                txtTenTT.setEnabled(false);
                txtNgaySinhTT.setEnabled(false);
                rdoNamTT.setEnabled(false);
                rdoNuTT.setEnabled(false);
                btnKTTT.setEnabled(false);
                btnThemMoiTT.setEnabled(false);
                btnHuyChonTT.setEnabled(true);
                txtKhachDua.setEnabled(true);
            } else {
                MsgBox.alert(this, "Số điện thoại không tồn tại!");
            }
        }
    }

    void setTableSPTT() {
        String h[] = {"Mã sản phẩm", "Tên sản phẩm", "Số lượng", "ĐVT", "Đơn giá", "Tổng tiền"};
        modelSP1 = new DefaultTableModel(h, 0) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }
        };
        tblSP1.setModel(modelSP1);
        fillTableDSTT();
    }

    void fillTableDSTT() {
        modelSP1.setRowCount(0);
        List<BanCho> lst = new BanChoDAO().selectByBan(maBan);
        lst.forEach((banCho) -> {
            SanPham sp = new SanPhamDAO().selectById(banCho.getMaSP());
            modelSP1.addRow(new Object[]{sp.getMaSP(), sp.getTenSanPham(), banCho.getSoLuong(), sp.getDonViTinh(), Xcurrency.toCurrency(sp.getDonGia()), Xcurrency.toCurrency(sp.getDonGia() * banCho.getSoLuong())});
        });
    }

    void themMoiTT() {
        if (checkValidateTT()) {
            KhachHang kh = new KhachHang(txtTenTT.getText(), txtSDTTT.getText(), txtEmailTT.getText(), txtNgaySinhTT.getDate(), rdoNamTT.isSelected(), Auth.user.getMaNV(), true);
            new KhachHangDao().insertNoID(kh);
            MsgBox.alert(this, "Thêm mới thành công");
        }
    }

    void hoanThanhTT() {
        HoaDon hd = new HoaDon(new KhachHangDao().selectSDT(txtSDTTT.getText()).getMaKH(), Xdate.toString(new Date(), "yyyy-MM-dd"), "", Auth.user.getMaNV(), lstSKKM.get(cboSK.getSelectedIndex()).getMaSKKM(), maBan, true);
        new HoaDonDAO().insert(hd);
        int maHD = new HoaDonDAO().selectMaHD(maBan).getMaHD();
        for (int i = 0; i < tblSP.getRowCount(); i++) {
            HoaDonChiTiet hdct = new HoaDonChiTiet(maHD, tblSP.getValueAt(i, 0).toString(), Integer.parseInt(tblSP.getValueAt(i, 2).toString()), Xcurrency.toInt(tblSP.getValueAt(i, 4).toString()), true);
            new HoaDonChiTietDAO().insert(hdct);
        }
        new BanChoDAO().delete(maBan);
        fillTable();
        defaultForm();
        resetFormTT();
        MsgBox.alert(this, "Thanh toán thành công!");
        tabs.setSelectedIndex(0);
    }

    void resetFormTT() {
        huyChonTT();
        lblBan.setText("");
        lblOrder.setText("");
        lblGioRa.setText("");
        lblGioVao.setText("");
        lblThanhToan.setText("");
        modelSP1.setRowCount(0);
        cboSK.setSelectedItem("Không có");
        lblCongtien.setText("0 đ");
        lblGiam.setText("0 đ");
        lblTongcong.setText("0 đ");
        lblThanhChu.setText("Không Đồng");
        txtKhachDua.setText("0");
        lblTraLai.setText("0 đ");
    }

    boolean checkValidateTT() {
        String pEmail = "^.+@fpt.edu.vn$";
        String pSDT = "^0[0-9]{9}$";
        if (txtTenTT.getText().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập tên khách hàng!");
            txtTenTT.requestFocus();
            return false;
        } else if (txtSDTTT.getText().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập SDT khách hàng!");
            txtSDTTT.requestFocus();
            return false;
        } else if (!txtSDTTT.getText().matches(pSDT)) {
            MsgBox.alert(this, "SDT không đúng định dạng!");
            txtSDTTT.requestFocus();
            return false;
        } else if (txtEmailTT.getText().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập email khách hàng!");
            txtEmailTT.requestFocus();
            return false;
        } else if (!txtEmailTT.getText().matches(pEmail)) {
            MsgBox.alert(this, "Email không đúng định dạng!");
            txtEmailTT.requestFocus();
            return false;
        } else if (txtNgaySinhTT.getDate() == null) {
            MsgBox.alert(this, "Vui lòng nhập ngày sinh khách hàng!");
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btn1;
    private javax.swing.JLabel btn10;
    private javax.swing.JLabel btn11;
    private javax.swing.JLabel btn12;
    private javax.swing.JLabel btn2;
    private javax.swing.JLabel btn3;
    private javax.swing.JLabel btn4;
    private javax.swing.JLabel btn5;
    private javax.swing.JLabel btn6;
    private javax.swing.JLabel btn7;
    private javax.swing.JLabel btn8;
    private javax.swing.JLabel btn9;
    private javax.swing.JButton btnCheckIn;
    private javax.swing.JButton btnChuyenBan;
    private javax.swing.JButton btnDatLich;
    private javax.swing.JButton btnHoanThanh;
    private javax.swing.JButton btnHoanThanhTT;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnHuyChon;
    private javax.swing.JButton btnHuyChon1;
    private javax.swing.JButton btnHuyChonTT;
    private javax.swing.JButton btnHuyLich;
    private javax.swing.JButton btnHuyMon;
    private javax.swing.JButton btnHuyTT;
    private javax.swing.JButton btnInHoaDonTT;
    private javax.swing.JButton btnKT;
    private javax.swing.JButton btnKT1;
    private javax.swing.JButton btnKTTT;
    private javax.swing.JButton btnLuuLai;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPre;
    private javax.swing.JButton btnSoLuong;
    private javax.swing.JButton btnSuaBan;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThayDoiLich;
    private javax.swing.JButton btnThemBan;
    private javax.swing.JButton btnThemMoi;
    private javax.swing.JButton btnThemMoiTT;
    private javax.swing.JButton btnThemVao;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXoaBan;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JComboBox<String> cboBan;
    private javax.swing.JComboBox<String> cboGio;
    private javax.swing.JComboBox<String> cboLoai;
    private javax.swing.JComboBox<String> cboPhut;
    private javax.swing.JComboBox<String> cboSK;
    private javax.swing.JComboBox<String> cboTang;
    private javax.swing.JComboBox<String> cboTangDB;
    private javax.swing.JComboBox<String> cboTangQL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lbTable;
    private javax.swing.JLabel lblB;
    private javax.swing.JLabel lblBan;
    private javax.swing.JLabel lblCongtien;
    private javax.swing.JLabel lblGiam;
    private javax.swing.JLabel lblGioRa;
    private javax.swing.JLabel lblGioVao;
    private javax.swing.JLabel lblMaBan;
    private javax.swing.JLabel lblOrder;
    private javax.swing.JLabel lblThanhChu;
    private javax.swing.JLabel lblThanhToan;
    private javax.swing.JLabel lblTongcong;
    private javax.swing.JLabel lblTraLai;
    private javax.swing.JPanel pnlBan;
    private javax.swing.JRadioButton rdoALL;
    private javax.swing.JRadioButton rdoCoKhach;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNam1;
    private javax.swing.JRadioButton rdoNamTT;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JRadioButton rdoNu1;
    private javax.swing.JRadioButton rdoNuTT;
    private javax.swing.JRadioButton rdoTrong;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblCI;
    private javax.swing.JTable tblDB;
    private javax.swing.JTable tblDS;
    private javax.swing.JTable tblQL;
    private javax.swing.JTable tblSP;
    private javax.swing.JTable tblSP1;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmail1;
    private javax.swing.JTextField txtEmailTT;
    private javax.swing.JTextField txtKhachDua;
    private javax.swing.JTextField txtMaBan;
    private com.toedter.calendar.JDateChooser txtNgaySinh;
    private com.toedter.calendar.JDateChooser txtNgaySinh1;
    private com.toedter.calendar.JDateChooser txtNgaySinhTT;
    private com.toedter.calendar.JDateChooser txtNgaydat;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSDT1;
    private javax.swing.JTextField txtSDTTT;
    private javax.swing.JSpinner txtTang;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTen1;
    private javax.swing.JTextField txtTenBan;
    private javax.swing.JTextField txtTenTT;
    private javax.swing.JTextField txtTimBanDat;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTimKiemTT;
    // End of variables declaration//GEN-END:variables
}
